import { Database } from 'better-sqlite3';

export type InsertIntoMytable1Params = {
	id: number;
	value?: number;
}

export type InsertIntoMytable1Result = {
	changes: number;
	lastInsertRowid: number;
}

export function insertIntoMytable1(db: Database, params: InsertIntoMytable1Params): InsertIntoMytable1Result {

	const keys = Object.keys(params) as Array<keyof InsertIntoMytable1Params>;
	const columns = keys.filter(key => params[key] !== undefined);
	const values = columns.map(col => params[col]!);

	const sql = columns.length == 0
		? `INSERT INTO mytable1 DEFAULT VALUES`
		: `INSERT INTO mytable1(${columns.join(',')}) VALUES(${columns.map(_ => '?').join(',')})`

	return db.prepare(sql)
		.run(values) as InsertIntoMytable1Result;
}